# .github/workflows/ci.yml

name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Instalar dependências
      run: |
        pip install -r requirements.txt

    - name: Executar testes
      run: |
        pytest
  
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_key_name: ${{ secrets.AWS_KEY_NAME }}
    
    outputs:
      ec2_ip: ${{ steps.get-ip.outputs.public_ip }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Inicializar Terraform
        run: terraform -chdir=infra init

      - name: Aplicar Terraform
        run: terraform -chdir=infra apply -auto-approve

      - name: Obter IP da Instância
        id: get-ip
        run: |
          # Captura e salva o IP como um output do passo de forma limpa
          echo "public_ip=$(terraform -chdir=infra output -raw public_ip)" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Executar deploy
        run: |
          KEY_PATH=~/.ssh/id_rsa
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > $KEY_PATH
          chmod 600 $KEY_PATH
          
          EC2_IP="${{ needs.terraform.outputs.ec2_ip }}"
          
          ssh -i $KEY_PATH -o StrictHostKeyChecking=no ec2-user@$EC2_IP
        shell: bash
